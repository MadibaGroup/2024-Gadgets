<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Plonkbook on Handbook</title><link>https://madibagroup.github.io/2024-Gadgets/</link><description>Recent content in Plonkbook on Handbook</description><generator>Hugo</generator><language>en-us</language><atom:link href="https://madibagroup.github.io/2024-Gadgets/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://madibagroup.github.io/2024-Gadgets/docs/background/poly-iop/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://madibagroup.github.io/2024-Gadgets/docs/background/poly-iop/</guid><description>Notes on Polynomial Interactive Oracle Proofs (Draft) # Encoding Arrays of Data into Polynomials # Data starts as a array of integers where integers in each slot are between 0 and $q-1$, where $q$ is a large (generally 256 bit) prime number. Recall that we call this set of integers $\mathbb{Z}_q$.
$\mathsf{data}_0$ $\mathsf{data}_1$ $\mathsf{data}_2$ $\mathsf{data}_3$ $\mathsf{data}_4$ It is common to denote a polynomial like $P(X)$ where $X$ is the variable of the polynomial.</description></item><item><title/><link>https://madibagroup.github.io/2024-Gadgets/docs/gadgets/mult2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://madibagroup.github.io/2024-Gadgets/docs/gadgets/mult2/</guid><description>Multiplication (Type 2) # Recap of types # Type Description Recap This mult1 $\mathsf{Arr}_3=\mathsf{Arr}_1 \cdot \mathsf{Arr}_2$ $\mathsf{Arr}_3$ is the element-wise multiplication of $\mathsf{Arr}_1$ and $\mathsf{Arr}_2$. mult2 $\mathsf{Prod}_\mathsf{Arr}=\prod_{i = 0}^{n-1} \mathsf{Arr}[i]$ $\mathsf{Prod}_\mathsf{Arr}$ is the disclosed product of all the elements in $\mathsf{Arr}$. âœ… mult3 $\prod_{i = 0}^{n-1} \mathsf{Arr}_1[i]=\prod_{i = 0}^{n-1} \mathsf{Arr}_2[i]$ $\mathsf{Arr}_1$ and $\mathsf{Arr}_2$ have the same undisclosed product. Relation # $ \mathcal{R}_{\mathtt{mult2}} := \left\{ \begin{array}{l} (K_\mathsf{Arr},\mathsf{Prod}_\mathsf{Arr}) \end{array} \middle | \begin{array}{l} \mathsf{Arr} = [a_0, a_1, a_2, \dots, a_{n-1}], \\ \mathsf{Prod}_\mathsf{Arr} = \prod_{i = 0}^{n-1} a_i, \\ \mathsf{Poly}_\mathsf{Arr}=\mathsf{FFT.</description></item><item><title/><link>https://madibagroup.github.io/2024-Gadgets/docs/gadgets/zero1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://madibagroup.github.io/2024-Gadgets/docs/gadgets/zero1/</guid><description>Zeroing Parts of an Array # Assuming an input array of size $n$: $\langle \mathsf{data}_0,\mathsf{data}_1,\ldots,\mathsf{data}_{n-1}\rangle$ and input array encoded into the polynomial. This uses &amp;ldquo;Encoding 2&amp;rdquo; from above (evaluation points) and uses &amp;ldquo;Roots of Unity + FFT&amp;rdquo; from above where $\omega\in\mathbb{G}_\kappa$ is a generator for the x-coordinates of the points.
$\bot$ is an arbitrary non-zero integer.
Operation Input Array Input Polynomial Output Array Output Polynomial Zero all $\langle 3,1,3,3,7 \rangle$ $P(X)$ $\langle 0,0,0,0,0 \rangle$ $P(X)\cdot(X^\kappa-1)$ Zero first $\langle 3,1,3,3,7 \rangle$ $P(X)$ $\langle 0,\bot,\bot,\bot,\bot \rangle$ $P(X)\cdot(X-\omega^0)$ Zero last $\langle 3,1,3,3,7 \rangle$ $P(X)$ $\langle \bot,\bot,\bot,\bot,0 \rangle$ $P(X)\cdot(X-\omega^{\kappa-1})$ Zero all but first $\langle 3,1,3,3,7 \rangle$ $P(X)$ $\langle \bot,0,0,0,0 \rangle$ $P(X)\cdot\frac{(X^\kappa-1)}{(X-\omega^0)}$ Zero all but last $\langle 3,1,3,3,7 \rangle$ $P(X)$ $\langle 0,0,0,0,\bot \rangle$ $P(X)\cdot\frac{(X^\kappa-1)}{(X-\omega^{\kappa-1})}$ Why are these useful?</description></item></channel></rss>